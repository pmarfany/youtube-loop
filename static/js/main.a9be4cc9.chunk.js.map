{"version":3,"sources":["componenets/YoutubePlayer/YoutubePlayer.tsx","componenets/YoutubeSearchInput/YoutubeSearchInput.tsx","App.tsx","hooks/useQuery.ts","index.tsx"],"names":["PLAYER_OPTS","height","width","YoutubePlayer","_ref","videoId","react_default","a","createElement","index_esm","onEnd","_ref2","target","playVideo","opts","YoutubeSearchInput","value","onSubmit","_useState","useState","_useState2","Object","slicedToArray","inputValue","setInputValue","submitValue","className","type","placeholder","onChange","e","currentTarget","onKeyDown","key","onClick","App","_useQuery","_URLSearchParams$get","location","useLocation","history","useHistory","URLSearchParams","search","get","push","concat","useQuery","_useQuery2","setVideoId","Fragment","YoutubeSearchInput_YoutubeSearchInput","YoutubePlayer_YoutubePlayer","ReactDOM","render","react_router_dom","basename","App_App","document","getElementById"],"mappings":"2MAOMA,EAAuB,CAAEC,OAAQ,OAAQC,MAAO,QAEhDC,EAA8C,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,QAAH,OAClDC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CACEJ,QAASA,EACTK,MAAO,SAAAC,GAAA,OAAAA,EAAGC,OAAoBC,aAC9BC,KAAMd,KCNJe,EAAiD,SAAAX,GAAyB,IAAtBY,EAAsBZ,EAAtBY,MAAOC,EAAeb,EAAfa,SAAeC,EAC1CC,mBAASH,GADiCI,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACvEK,EADuEH,EAAA,GAC3DI,EAD2DJ,EAAA,GAKxEK,EAAc,kBAAMR,EAASM,IAOnC,OACEjB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,8BACbpB,EAAAC,EAAAC,cAAA,SACEmB,KAAK,SACLC,YAAY,+BACZF,UAAU,gBACVV,MAAOO,EACPM,SAhBW,SAACC,GAAD,OAAsCN,EAAcM,EAAEC,cAAcf,QAiB/EgB,UAbY,SAACF,GACF,UAAVA,EAAEG,KACPR,OAaEnB,EAAAC,EAAAC,cAAA,UAAQkB,UAAU,gBAAgBQ,QAAST,GAA3C,YCvBAU,EAAgB,WAAM,IAAAC,ECF5B,SAAkBH,GAAuB,IAAAI,EACjCC,EAAWC,cACXC,EAAUC,cAEhB,MAAO,SAAAJ,EACL,IAAIK,gBAAgBJ,EAASK,QAAQC,IAAIX,UADpC,IAAAI,IAC4C,GACjD,SAACrB,GAAD,OAAmBwB,EAAQK,KAAR,KAAAC,OAAkBb,EAAlB,KAAAa,OAAyB9B,MDHhB+B,CAAS,KADbC,EAAA3B,OAAAC,EAAA,EAAAD,CAAAe,EAAA,GACnB/B,EADmB2C,EAAA,GACVC,EADUD,EAAA,GAG1B,OACE1C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA2C,SAAA,KACE5C,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAAC2C,EAAD,CAAoBnC,MAAOX,EAASY,SAAUgC,EAAYhB,IAAK5B,IAC/DC,EAAAC,EAAAC,cAAC4C,EAAD,CAAe/C,QAASA,cET9BgD,IAASC,OACPhD,EAAAC,EAAAC,cAAC+C,EAAA,EAAD,CAAeC,SAAS,iBACtBlD,EAAAC,EAAAC,cAACiD,EAAD,OAEFC,SAASC,eAAe","file":"static/js/main.a9be4cc9.chunk.js","sourcesContent":["import React from 'react';\nimport YouTube, {Options} from 'react-youtube';\n\ntype YoutubePlayerProps = {\n  videoId: string;\n}\n\nconst PLAYER_OPTS: Options = { height: '100%', width: '100%' };\n\nconst YoutubePlayer: React.FC<YoutubePlayerProps> = ({ videoId }) => (\n  <YouTube\n    videoId={videoId}\n    onEnd={({ target }) => target.playVideo()}\n    opts={PLAYER_OPTS}\n  />\n);\n\nexport { YoutubePlayer };\n","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\n\ninterface SearchInputProps {\n  value: string;\n  onSubmit: (value: string) => void;\n}\n\nconst YoutubeSearchInput: React.FC<SearchInputProps> = ({ value, onSubmit }) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value);\n\n  const submitValue = () => onSubmit(inputValue);\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if ( e.key !== 'Enter' ) { return; }\n    submitValue();\n  };\n\n  return (\n    <div className=\"input-wrapper input-search\">\n      <input\n        type=\"search\"\n        placeholder=\"Insert youtube videoId (?v=)\"\n        className=\"input-element\"\n        value={inputValue}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n      />\n      <button className=\"search-button\" onClick={submitValue}>Search</button>\n    </div>\n  );\n};\n\nexport { YoutubeSearchInput };\n","import React from 'react';\nimport 'reset-css';\nimport {useQuery} from './hooks/useQuery';\nimport {YoutubePlayer} from './componenets/YoutubePlayer/YoutubePlayer';\nimport {YoutubeSearchInput} from './componenets/YoutubeSearchInput/YoutubeSearchInput';\n\nconst App: React.FC = () => {\n  const [videoId, setVideoId] = useQuery('v');\n\n  return (\n    <>\n      <h1>Youtube Loop</h1>\n\n      <YoutubeSearchInput value={videoId} onSubmit={setVideoId} key={videoId} />\n      <YoutubePlayer videoId={videoId} />\n    </>\n  );\n};\n\nexport { App };\n","import {useHistory, useLocation} from 'react-router-dom';\n\ntype UseQuery = [string, (value: string) => void];\n\nfunction useQuery(key: string): UseQuery {\n  const location = useLocation();\n  const history = useHistory();\n\n  return [\n    new URLSearchParams(location.search).get(key) ?? '',\n    (value: string) => history.push(`/?${key}=${value}`),\n  ];\n}\n\nexport { useQuery };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/youtube-loop\">\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}