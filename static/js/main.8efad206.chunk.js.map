{"version":3,"sources":["componenets/YoutubePlayer/YoutubePlayer.tsx","componenets/Button/Button.tsx","Icons/SearchIcon.tsx","componenets/YoutubeSearchInput/YoutubeSearchInput.tsx","App.tsx","hooks/useQuery.ts","index.tsx"],"names":["PLAYER_OPTS","height","width","YoutubePlayer","_ref","videoId","react_default","a","createElement","index_esm","containerClassName","onEnd","_ref2","target","playVideo","opts","Button","icon","iconPosition","children","className","props","Object","objectWithoutProperties","Error","assign","concat","SearchIcon","color","size","viewBox","d","fill","defaultProps","YoutubeSearchInput","value","onSubmit","_useState","useState","_useState2","slicedToArray","inputValue","setInputValue","submitValue","type","placeholder","onChange","e","currentTarget","onKeyDown","key","Button_Button","onClick","SearchIcon_SearchIcon","App","_useQuery","_URLSearchParams$get","location","useLocation","history","useHistory","URLSearchParams","search","get","push","useQuery","_useQuery2","setVideoId","Fragment","YoutubeSearchInput_YoutubeSearchInput","YoutubePlayer_YoutubePlayer","ReactDOM","render","react_router_dom","basename","App_App","document","getElementById"],"mappings":"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","file":"static/js/main.8efad206.chunk.js","sourcesContent":["import React from 'react';\nimport YouTube, {Options} from 'react-youtube';\nimport './style.css';\n\ntype YoutubePlayerProps = {\n  videoId: string;\n}\n\nconst PLAYER_OPTS: Options = { height: '100%', width: '100%' };\n\nconst YoutubePlayer: React.FC<YoutubePlayerProps> = ({ videoId }) => (\n  <YouTube\n    videoId={videoId}\n    containerClassName=\"video-container\"\n    onEnd={({ target }) => target.playVideo()}\n    opts={PLAYER_OPTS}\n  />\n);\n\nexport { YoutubePlayer };\n","import React from 'react';\nimport './style.css';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  icon?: React.ReactNode;\n  iconPosition?: 'before' | 'after';\n}\n\nconst Button: React.FC<ButtonProps> = ({ icon, iconPosition, children, className, ...props }) => {\n  if ( icon && !iconPosition ) { throw new Error('Must specify both \"iconPosition\" and \"icon\" if one of them are included!'); }\n\n  return (\n    <button className={`button flex-center ${className}`} {...props}>\n      {iconPosition === 'before' && <span className=\"button-icon mr-md\">{icon}</span>}\n      <span className=\"button-label\">{ children }</span>\n      {iconPosition === 'after' && <span className=\"button-icon ml-md\">{icon}</span>}\n    </button>\n  );\n};\n\nexport { Button };\n","import React from 'react';\n\ninterface SearchIconProps {\n  color: string;\n  size?: string;\n}\n\nconst SearchIcon: React.FC<SearchIconProps> = ({ color, size }) => (\n  <svg viewBox=\"0 0 512 512\" height={size} width={size}>\n    <path d=\"M3.1,478.7L151.9,330c-28.2-34.8-45.2-79.1-45.2-127.3C106.7,90.9,197.6,0,309.3,0S512,90.9,512,202.7\n          s-90.9,202.7-202.7,202.7c-48.2,0-92.5-17-127.3-45.2L33.3,508.9c-4.2,4.2-10.9,4.2-15.1,0L3.1,493.8C-1,489.6-1,482.9,3.1,478.7z\n          M309.3,362.7c88.2,0,160-71.8,160-160s-71.8-160-160-160s-160,71.8-160,160S221.1,362.7,309.3,362.7z\" fill={color}/>\n  </svg>\n);\n\nSearchIcon.defaultProps = {\n  size: '1rem',\n};\n\nexport { SearchIcon };","import React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {Button} from '../Button/Button';\nimport {SearchIcon} from '../../Icons/SearchIcon';\nimport './style.css';\n\ninterface SearchInputProps {\n  value: string;\n  onSubmit: (value: string) => void;\n  className?: string;\n}\n\nconst YoutubeSearchInput: React.FC<SearchInputProps> = ({ value, onSubmit, className }) => {\n  const [inputValue, setInputValue] = useState(value);\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>) => setInputValue(e.currentTarget.value);\n\n  const submitValue = () => onSubmit(inputValue);\n\n  const onKeyDown = (e: KeyboardEvent) => {\n    if ( e.key !== 'Enter' ) { return; }\n    submitValue();\n  };\n\n  return (\n    <div className={`input-wrapper flex-center ${className}`}>\n      <input\n        type=\"search\"\n        placeholder=\"Insert youtube videoId (?v=)\"\n        className=\"input-element\"\n        value={inputValue}\n        onChange={onChange}\n        onKeyDown={onKeyDown}\n      />\n      <Button\n        className=\"search-button\"\n        onClick={submitValue}\n        children=\"Search\"\n        icon={<SearchIcon color=\"white\" />}\n        iconPosition=\"after\"\n      />\n    </div>\n  );\n};\n\nYoutubeSearchInput.defaultProps = { className: '' };\n\nexport { YoutubeSearchInput };\n","import React from 'react';\nimport 'reset-css';\nimport './style.css';\nimport {useQuery} from './hooks/useQuery';\nimport {YoutubePlayer} from './componenets/YoutubePlayer/YoutubePlayer';\nimport {YoutubeSearchInput} from './componenets/YoutubeSearchInput/YoutubeSearchInput';\n\nconst App: React.FC = () => {\n  const [videoId, setVideoId] = useQuery('v');\n\n  return (\n    <>\n      <h1 className=\"mb-xxl text-center\">Youtube Loop</h1>\n      <YoutubeSearchInput\n        key={videoId}\n        value={videoId}\n        onSubmit={setVideoId}\n        className=\"mb-xxl\"\n      />\n      <YoutubePlayer videoId={videoId} />\n    </>\n  );\n};\n\nexport { App };\n","import {useHistory, useLocation} from 'react-router-dom';\n\ntype UseQuery = [string, (value: string) => void];\n\nfunction useQuery(key: string): UseQuery {\n  const location = useLocation();\n  const history = useHistory();\n\n  return [\n    new URLSearchParams(location.search).get(key) ?? '',\n    (value: string) => history.push(`/?${key}=${value}`),\n  ];\n}\n\nexport { useQuery };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter basename=\"/youtube-loop\">\n    <App/>\n  </BrowserRouter>,\n  document.getElementById('root')\n);"],"sourceRoot":""}